#!/usr/bin/env python3

import os
import struct
import sys
import time
import numpy as np
from scipy.stats import binomtest


def main():
    nbits = 32
    one, tot = {b: 0 for b in range(nbits)}, 0
    last = time.time()
    p_bonferroni = 0.01 / nbits
    with os.fdopen(sys.stdin.fileno(), "rb", closefd=False) as stdin:
        while True:
            arr = np.frombuffer(stdin.read(256 * 1024), dtype=np.uint32)
            for b in range(nbits):
                s = np.sum(arr & (1 << b), dtype=np.uint64)
                one[b] += int(s) >> b
            tot += len(arr)
            now = time.time()
            if last + 3 < now:
                print("Got {:d} words".format(tot))
                for b in range(nbits):
                    p_value = binomtest(one[b], tot).pvalue  # two-sided alternative
                    warn = "⚠" if p_value < p_bonferroni else "✓"
                    print(
                        "{:2d}: {:6.3f} % == 1".format(b, one[b] * 100 / tot),
                        warn,
                        "p =",
                        p_value,
                    )
                last = now


if __name__ == "__main__":
    main()
